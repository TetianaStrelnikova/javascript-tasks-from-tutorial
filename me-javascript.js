`use strict`;
/*alert ("Me Javascript from outside!");
let myname = prompt("What is your name?", "");
alert (myname);

Чему будут равны переменные a, b, c и d в примере ниже?
let a = 1, b = 1; 
let c = ++a; // 2 ? префиксный инкремент возвращает переменную с изменениями
let d = b++; //  1? постфиксный инкремент возвращает переменную без изменений

Чему будут равны переменные a и x после исполнения кода в примере ниже?
let a = 2;
let x = 1 + (a *= 2); - a= 2*2//4 - x=5

Какой результат будет у выражений ниже?
"" + 1 + 0 // '10'
"" - 1 + 0 // -1
true + false// 1
6 / "3"//2
"2" * "3"//6
4 + 5 + "px"//9px"$" + 4 + 5//$45
"4" - 2 // 2
"4px" - 2 // Nan
"  -9  " + 5 //" -9 5"
"  -9  " - 5 // -14
null(null становится 0 после численного преобразования.) + 1 //1
undefined (undefined становится NaN после численного преобразования.)+ 1 //Nan
" \t \n"(Пробельные символы, такие как \t и \n, по краям строки игнорируются при преобразовании в число) - 2 // -2



Ниже приведён код, который запрашивает у пользователя два числа и показывает их сумму.
Он работает неправильно. 
Код в примере выводит 12 (для значения полей по умолчанию).
В чём ошибка? Исправьте её. Результат должен быть 3.
let a = prompt("Первое число?", 1);
let b = prompt("Второе число?", 2);
alert(a + b); // 12 //alert(+a + +b)


Число 0, пустая строка "", null, undefined и NaN становятся false. Из-за этого их называют «ложными» («falsy») значениями.
Остальные значения становятся true, поэтому их называют «правдивыми» («truthy»).

Каким будет результат этих выражений?

5 > 4 // true
"ананас" > "яблоко" // 
"2" > "12"//  true (Снова посимвольное сравнение. Первый символ первой строки "2" больше, чем первый символ второй "1".)
undefined == null  //true
undefined === null //false (Строгое сравнение разных типов.)
null == "\n0\n" // false null== undefined
null === +"\n0\n" //false (Строгое сравнение разных типов.)


Выведется ли alert?
if ("0") {
  alert( 'Привет' );
}// Yes "0"=  (Любая строка, кроме пустой (а строка "0" – не пустая), в логическом контексте становится true.)


Используя конструкцию if..else, напишите код, 
который будет спрашивать: 
„Какое «официальное» название JavaScript?“
Если пользователь вводит «ECMAScript», 
то показать: «Верно!»,
в противном случае – отобразить: 
«Не знаете? ECMAScript!»

let javascriptName = prompt("Какое «официальное» название JavaScript?","");
(javascriptName == "ECMAScript")?
alert(«Верно!»):alert(«Не знаете? ECMAScript!»);

Используя конструкцию if..else, напишите код, 
который получает число через prompt, 
а затем выводит в alert:
1, если значение больше нуля,
-1, если значение меньше нуля,
0, если значение равно нулю.
Предполагается, что пользователь вводит только числа.


let myNumber = prompt("Please,enter the number?");
(myNumber >0)? alert (1):
(myNumber <0)? alert (-1):
(myNumber ==0)? alert (0);


Перепишите конструкцию if с использованием условного оператора '?':

let result;
if (a + b < 4) {
  result = 'Мало';
} else {
  result = 'Много';
}

result =(a + b < 4)? 'Мало': 'Много';


Перепишите if..else с использованием нескольких операторов '?'.

Для читаемости рекомендуется разбить код на несколько строк.

let message;
if (login == 'Сотрудник') {
  message = 'Привет';
} else if (login == 'Директор') {
  message = 'Здравствуйте';
} else if (login == '') {
  message = 'Нет логина';
} else {
  message = '';
}

message = (login == 'Сотрудник')?'Привет':
        (login == 'Директор')?'Здравствуйте':
        (login == '')?'Нет логина':
        '';
Задачи while and for

1.  Какое последнее значение выведет этот код? Почему?
    let i = 3;
    while (i) {
      alert( i-- );}
    output: остановит цикл при i = 0.
        3,2,1

2.  Для каждого цикла запишите, какие значения он выведет. 
    
    Префиксный вариант ++i: returns new value
    let i = 0;
    while (++i < 5) alert( i );
    output: 1,2,3,4
        Оператор ++i увеличивает i, возвращая new i = 1 , так что в сравнении ++i < 5 будет участвовать i = 1.
        will compare 1<5 True , but alert 1, then 2<5 True, alert 2; 3<5 True, alert 3; 4<5 True, alert 4; 5<5 False

    Постфиксный вариант i++ returns old value
    let i = 0;
    while (i++ < 5) alert( i );
    output: 1,2,3,4,5
        Оператор i++ увеличивает i, возвращая старое old значение, так что в сравнении i++ < 5 будет участвовать старое i = 0.
        will compare 0<5 True , but alert 1, then 1<5 True, alert 2; 2<5 True, alert 3; 3<5 True, alert 4; 4<5, alert 5; 5<5 False

        Увеличение i++ выполняется TYOGETHER WITH проверки условия, значение i при этом  используется, поэтому  разницA между i++ = 0 и ++i = 1.


3.  Для каждого цикла запишите, какие значения он выведет. 
    
    
    for (let i = 0; i < 5; i++) alert( i ); 
    Output:  i++ returns old  value : 1,2,3,4
    
    for (let i = 0; i < 5; ++i) alert( i );
    Output:  ++i returns new  value : 1,2,3,4,5<5 False

    Увеличение i++ выполняется отдельно от проверки условия (2), значение i при этом не используется, поэтому нет никакой разницы между i++ и ++i.


4.  При помощи цикла for выведите чётные числа от 2 до 10.

        for(i=1;i<=10;i++){
            if (i%2==0){console.log(i)}
          }
output:2
4
6
8
10

5.  Перепишите код, заменив цикл for на while, без изменения поведения цикла.

    for (let i = 0; i < 3; i++) {
     alert( `number ${i}!` );
    }
    решение
    let i = 0
    while(i<3){alert( `number ${i}!` );
               i++;}

6.  Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
    Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
    Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.
    решение 1
    let number  = prompt("Enter a number");
    if(number<100)
          { number  = prompt("Enter a number");};
    решение 2 
            let num;
            do{num = prompt("enter a number ");}while(num<100);

7.  Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
    Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.
    Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
    Напишите код, который выводит все простые числа из интервала от 2 до n.
    Для n = 10 результат должен быть 2,3,5,7.
    P.S. Код также должен легко модифицироваться для любых других интервалов.

решение


let n = 10;
next:
for(i=2;i<=n;i++) //compares that i<=n from i=2
  {for(let a=2;a<i;a++){   //compares that  range a= 2 to a<i
    if(i%a==0){continue next;}} // for every a compares that i%a==0, if it is true...go up the number is not valid!
  alert( i );}  


